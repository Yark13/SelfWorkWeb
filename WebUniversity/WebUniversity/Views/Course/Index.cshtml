@using WebUniversity.DataLayer
@using WebUniversity.ViewModels
@model PaginatedList<CourseViewModel>

@{
    ViewData["Title"] = "Courses";
}

<link rel="stylesheet" href="~/css/entity-index.css" />

<div class="d-flex justify-content-between mb-3">
    <form asp-controller="Course" asp-action="Create" method="get">
        <input type="submit" value="Create New Course" class="btn btn-primary" />
    </form>

    <form asp-action="Index" method="get" class="d-flex">
        <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" class="form-control me-2" placeholder="Find by name..." />
        <input type="submit" value="Search" class="btn btn-outline-secondary me-2" />
        <a asp-action="Index" class="btn btn-outline-secondary">Reset</a>
    </form>
</div>

<table class="table table-striped">
    <caption>List of Courses</caption>
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["IdSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Id</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Name</a>
            </th>
            <th>Description</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@item.Id</td>
                <td>@item.Name</td>
                <td>@item.Description</td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-warning me-1">Edit</a>
                    <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-sm btn-info me-1">Details</a>
                    <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-sm btn-danger">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<nav aria-label="Page navigation">
    <ul class="pagination">
        <li class="page-item @prevDisabled">
            <a class="page-link" asp-action="Index" asp-route-pageNumber="@(Model.PageIndex - 1)"
               asp-route-sortOrder="@ViewData["CurrentSort"]"
               asp-route-currentFilter="@ViewData["CurrentFilter"]">Previous</a>
        </li>

        @for (int i = 1; i <= Model.TotalPages; i++)
        {
            if (i == 1 || i == Model.TotalPages || (i >= Model.PageIndex - 1 && i <= Model.PageIndex + 1))
            {
                <li class="page-item @(i == Model.PageIndex ? "active" : "")">
                    <a class="page-link" asp-action="Index"
                       asp-route-pageNumber="@i"
                       asp-route-sortOrder="@ViewData["CurrentSort"]"
                       asp-route-currentFilter="@ViewData["CurrentFilter"]">@i</a>
                </li>
            }
            else if ((i == Model.PageIndex - 2 || i == Model.PageIndex + 2))
            {
                <li class="page-item disabled"><span class="page-link">...</span></li>
            }
        }

        <li class="page-item @nextDisabled">
            <a class="page-link" asp-action="Index" asp-route-pageNumber="@(Model.PageIndex + 1)"
               asp-route-sortOrder="@ViewData["CurrentSort"]"
               asp-route-currentFilter="@ViewData["CurrentFilter"]">Next</a>
        </li>
    </ul>
</nav>
