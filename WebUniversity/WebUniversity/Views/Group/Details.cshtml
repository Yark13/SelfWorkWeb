@model WebUniversity.ViewModels.GroupViewModel
@{
    ViewData["Title"] = "Detail";
}

<link rel="stylesheet" href="~/css/entity-details.css" />

<hr />
<h4>Group Detail</h4>
<dl class="details-container">
    
    <dt class="col-sm-2">
        @Html.DisplayNameFor(model => model.Id)
    </dt>
    <dd class="col-sm-10">
        @Html.DisplayFor(model => model.Id)
    </dd>
    <dt class="col-sm-2">
        @Html.DisplayNameFor(model => model.Name)
    </dt>
    <dd class="col-sm-10">
        @Html.DisplayFor(model => model.Name)
    </dd>
    <dt class="col-sm-2">
        @Html.DisplayNameFor(model => model.CourseID)
    </dt>
    <dd class="col-sm-10">
        @Html.DisplayFor(model => model.CourseID)
    </dd>
</dl>

<form asp-controller="Student" asp-action="Create" method="get">
    <input type="hidden" name="GroupId" value="@Model.Id" />
    <input type="submit" value="Create new student" class="btn btn-primary" />
</form>

<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Find by name: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
            <input type="submit" value="Search" class="btn btn-default" /> |
            <a asp-action="Index">Back to Full List</a>
        </p>
    </div>
</form>

<caption>List of students</caption>
<div class="table-responsive">
    <table class="table">
        <thead>
            <tr>
                <th><a asp-action="Details" asp-route-sortOrder="@ViewData["IdSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Id</a></th>
                <th><a asp-action="Details" asp-route-sortOrder="@ViewData["LastNameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Last name</a></th>
                <th><a asp-action="Details" asp-route-sortOrder="@ViewData["FirstNameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">First name</a></th>
                <th>Group Id</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.MyStudents)
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => item.Id)</td>
                    <td>@Html.DisplayFor(modelItem => item.LastName)</td>
                    <td>@Html.DisplayFor(modelItem => item.FirstName)</td>
                    <td>@Html.DisplayFor(modelItem => item.GroupId)</td>
                    <td>
                        <a asp-controller="Student" asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-warning me-1">Edit</a>
                        <a asp-controller="Student" asp-action="Delete" asp-route-id="@item.Id" class="btn btn-sm btn-danger">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>

</div>
@{
    var prevDisabled = !Model.MyStudents.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.MyStudents.HasNextPage ? "disabled" : "";
    var studentsList = Model.MyStudents;
}
<ul class="pagination">
    <li class="page-item">
        <a asp-action="Details"
           asp-route-sortOrder="@ViewData["CurrentSort"]"
           asp-route-pageNumber="@(studentsList.PageIndex - 1)"
           asp-route-currentFilter="@ViewData["CurrentFilter"]"
           class="btn btn-default @prevDisabled"
           class="page-link"
           aria-current="page">
            Previous
        </a>
    </li>

    <li class="@(studentsList.PageIndex == 1 ? "page-item active " : "page-item")">
        <a asp-action="Details"
           asp-route-sortOrder="@ViewData["CurrentSort"]"
           asp-route-pageNumber="@(1)"
           asp-route-currentFilter="@ViewData["CurrentFilter"]"
           class="page-link"
           aria-current="page">
            1
        </a>
    </li>
    @if (studentsList.TotalPages > 3 && studentsList.PageIndex > 3)
    {
        <p> . . . </p>
    }


    @if (studentsList.TotalPages > 3 && studentsList.PageIndex > 2 && studentsList.PageIndex < studentsList.TotalPages)
    {
        <li>
            <a asp-action="Details"
               asp-route-sortOrder="@ViewData["CurrentSort"]"
               asp-route-pageNumber="@(studentsList.PageIndex - 1)"
               asp-route-currentFilter="@ViewData["CurrentFilter"]"
               class="page-link"
               aria-current="page">
                @(studentsList.PageIndex - 1)
            </a>
        </li>
    }

    @if (studentsList.TotalPages > 2)
    {
        <li class="@((studentsList.PageIndex > 1 && studentsList.PageIndex < studentsList.TotalPages) ? "page-item active " : "page-item")">
            <a asp-action="Details"
               asp-route-sortOrder="@ViewData["CurrentSort"]"
               asp-route-pageNumber="@(studentsList.PageIndex == 1 ? studentsList.PageIndex + 1 :studentsList.PageIndex != studentsList.TotalPages ? studentsList.PageIndex : studentsList.TotalPages - 1 )"
               asp-route-currentFilter="@ViewData["CurrentFilter"]"
               class="page-link"
               aria-current="page">
                @(studentsList.PageIndex == 1 ? studentsList.PageIndex + 1 : studentsList.PageIndex != studentsList.TotalPages ? studentsList.PageIndex : studentsList.TotalPages - 1)
            </a>
        </li>
    }

    @if (studentsList.TotalPages > 3 && studentsList.PageIndex < studentsList.TotalPages - 1 && studentsList.PageIndex > 1)
    {
        <li>
            <a asp-action="Details"
               asp-route-sortOrder="@ViewData["CurrentSort"]"
               asp-route-pageNumber="@(studentsList.PageIndex + 1)"
               asp-route-currentFilter="@ViewData["CurrentFilter"]"
               class="page-link"
               aria-current="page">
                @(studentsList.PageIndex + 1)
            </a>
        </li>
    }

    @if (studentsList.TotalPages > 3 && studentsList.PageIndex < studentsList.TotalPages - 2)
    {
        <p> . . . </p>
    }

    @if (studentsList.TotalPages > 1)
    {
        <li class="@(studentsList.PageIndex == studentsList.TotalPages ? "page-item active " : "page-item")">
            <a asp-action="Details"
               asp-route-sortOrder="@ViewData["CurrentSort"]"
               asp-route-pageNumber="@(studentsList.TotalPages)"
               asp-route-currentFilter="@ViewData["CurrentFilter"]"
               class="page-link"
               aria-current="page">
                @(studentsList.TotalPages)
            </a>
        </li>
    }

    <li>
        <a asp-action="Details"
           asp-route-sortOrder="@ViewData["CurrentSort"]"
           asp-route-pageNumber="@(studentsList.PageIndex + 1)"
           asp-route-currentFilter="@ViewData["CurrentFilter"]"
           class="btn btn-default @nextDisabled"
           aria-current="page">
            Next
        </a>
    </li>
</ul>

<div>
    <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-sm btn-warning me-1">Edit</a>
    <a asp-action="Delete" asp-route-id="@Model.Id" class="btn btn-sm btn-danger">Delete</a>
    <a asp-action="Index" class="btn btn-sm btn-info me-1">Back to List</a>
</div>